geom_line() +
theme_dpird(minor_grid = T) +
theme(legend.position="none", plot.background = element_rect(fill = "transparent"), panel.background = element_rect(fill = "transparent"))
# Dummy data for the line plot
set.seed(2023)
df2 <- data.frame(
REP = rep(factor(1:5), each=4),
y_variate = rnorm(20, 50, 10),
group = factor(rep(1:4, 5))
)
ggplot(df2, aes(REP, y_variate, color=group, group=group)) +
geom_line() +
theme_dpird(minor_grid = T) +
theme(legend.position="none", plot.background = element_rect(fill = "transparent"), panel.background = element_rect(fill = "transparent"))
df2 <- data.frame(
REP = rep(factor(1:5), each=4),
y_variate = rnorm(20, 50, 20),
group = factor(rep(1:4, 5))
)
ggplot(df2, aes(REP, y_variate, color=group, group=group)) +
geom_line() +
theme_dpird(minor_grid = T) +
theme(legend.position="none", plot.background = element_rect(fill = "transparent"), panel.background = element_rect(fill = "transparent"))
p2 <- ggplot(df2, aes(REP, y_variate, color=group, group=group)) +
geom_line() +
theme_dpird(minor_grid = T) +
theme(legend.position="none", plot.background = element_rect(fill = "transparent"), panel.background = element_rect(fill = "transparent")) +
labs(y = "Yield")
# Print the plots
print(p1)
print(p2)
xaringan::inf_mr()`
xaringan::inf_mr()
dpird_colours
xaringan::inf_mr()
xaringan::inf_mr()
```{r plot1-plot2, echo=FALSE, warning=FALSE, out.width="50%"}
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
install.packages(c("rstan", "gganimate", "ggplot2", "transformr"))
install.packages(c("rstan", "gganimate", "ggplot2", "transformr"))
install.packages(c("rstan", "gganimate", "ggplot2", "transformr"))
install.packages("rstan")
library(rstan)
library(gganimate)
library(ggplot2)
install.packages("gganimate")
library(ggplot2)
library(gganimate)
model_code <- "
data {
int<lower=0> N;
real y[N];
}
parameters {
real mu;
}
model {
y ~ normal(mu, 1);
}
"
data_list <- list(N = 100, y = rnorm(100))
fit <- stan(model_code = model_code, data = data_list, iter = 200, chains = 1, algorithm = "HMC")
# Extract samples
samples <- extract(fit, permuted = FALSE)
# Prepare data for animation
df <- data.frame(iteration = 1:200, mu = samples[ , , "mu"])
# Create animation
anim <- ggplot(df, aes(x = iteration, y = mu)) +
geom_line(aes(group = 1)) +
transition_states(iteration, transition_length = 2, state_length = 1) +
enter_fade() +
exit_fade()
anim
devtools::install_github("thomasp85/transformr")
devtools::install_github("thomasp85/transformr")
install.packages("transformr")
library(transformr)
# Create animation
anim <- ggplot(df, aes(x = iteration, y = mu)) +
geom_line(aes(group = 1)) +
transition_states(iteration, transition_length = 2, state_length = 1) +
enter_fade() +
exit_fade()
anim
# Create animation
anim <- ggplot(df, aes(x = iteration, y = mu, group = 1)) +  # Note the addition of group = 1
geom_line() +
transition_states(iteration, transition_length = 2, state_length = 1) +
enter_fade() +
exit_fade()
anim
df
transition_states
# Create animation
anim <- ggplot(df, aes(x = mu)) +
geom_density(aes(fill = as.factor(iteration)), alpha = 0.5) +
transition_states(iteration, transition_length = 2, state_length = 1) +
enter_fade() +
exit_fade() +
labs(fill = "Iteration")
anim
subset_df <- df[df$iteration %% 10 == 0, ]
# Create animation with density using the subsetted data
anim <- ggplot(subset_df, aes(x = mu)) +
geom_density(aes(fill = as.factor(iteration)), alpha = 0.5) +
transition_states(iteration, transition_length = 2, state_length = 1) +
enter_fade() +
exit_fade() +
labs(fill = "Iteration")
anim
anim
library(ggplot2)
library(trstyles)
library(dplyr)
library(tidyr)
set.seed(82)
n <- 10000
mcHist <- data_frame(Poisson = rpois(n, 3),
NegBinom = rnbinom(n, 5, .5)) %>%
mutate(Simulation = Poisson + NegBinom) %>%
gather(Distribution, Value) %>%
mutate(Distribution = sub("NegBinom", "Negative Binomial", Distribution))
mcSample <- mcHist %>%
group_by(Distribution) %>%
slice(1:200) %>%
gather(Distribution, Value) %>%
group_by(Distribution) %>%
mutate(rowNum = row_number(Distribution))
for (i in 1:length(unique(mcSample$rowNum))) {
dataUpdate <- mcSample %>%
group_by(Distribution) %>%
filter(rowNum %in% 1:i) %>%
group_by(Distribution) %>%
mutate(Last = rowNum == i)
gUpdate <- g +
geom_dotplot(data = dataUpdate,
aes(Value, fill = Last), color = NA,
binwidth = 1, method = "histodot",
dotsize = .6) +
scale_fill_manual(guide = FALSE, values = c("black", "red"))
#gUpdate
ggsave(filename = paste0('frames/plot', sprintf("%03d",i) , '.jpg'),
plot = gUpdate, device = 'jpeg')
}
g <- ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
scale_color_tr(guide = FALSE) +
facet_grid(~Distribution) +
theme_tr() +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("+", "=", ""), each = n), size = 24)
g <- ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
theme_tr() +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("+", "=", ""), each = n), size = 24)
g <- ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("+", "=", ""), each = n), size = 24)
g
g
g
for (i in 1:length(unique(mcSample$rowNum))) {
dataUpdate <- mcSample %>%
group_by(Distribution) %>%
filter(rowNum %in% 1:i) %>%
group_by(Distribution) %>%
mutate(Last = rowNum == i)
gUpdate <- g +
geom_dotplot(data = dataUpdate,
aes(Value, fill = Last), color = NA,
binwidth = 1, method = "histodot",
dotsize = .6) +
scale_fill_manual(guide = FALSE, values = c("black", "red"))
#gUpdate
ggsave(filename = paste0('frames/plot', sprintf("%03d",i) , '.jpg'),
plot = gUpdate, device = 'jpeg')
}
mcSample[mcSample$rowNum %% 10 == 0, ]
mcSample[mcSample$rowNum %% 8 == 0, ]
mcSample <- mcSample[mcSample$rowNum %% 8 == 0, ]
for (i in 1:length(unique(mcSample$rowNum))) {
dataUpdate <- mcSample %>%
group_by(Distribution) %>%
filter(rowNum %in% 1:i) %>%
group_by(Distribution) %>%
mutate(Last = rowNum == i)
gUpdate <- g +
geom_dotplot(data = dataUpdate,
aes(Value, fill = Last), color = NA,
binwidth = 1, method = "histodot",
dotsize = .6) +
scale_fill_manual(guide = FALSE, values = c("black", "red"))
#gUpdate
ggsave(filename = paste0('frames/plot', sprintf("%03d",i) , '.jpg'),
plot = gUpdate, device = 'jpeg')
}
set.seed(82)
n <- 10000
mcHist <- data_frame(Poisson = rpois(n, 3),
NegBinom = rnbinom(n, 5, .5)) %>%
mutate(Simulation = Poisson + NegBinom) %>%
gather(Distribution, Value) %>%
mutate(Distribution = sub("NegBinom", "Negative Binomial", Distribution))
mcSample <- mcHist %>%
group_by(Distribution) %>%
slice(1:200) %>%
gather(Distribution, Value) %>%
group_by(Distribution) %>%
mutate(rowNum = row_number(Distribution))
g <- ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("+", "=", ""), each = n), size = 24)
g
set.seed(82)
n <- 10000
mcHist <- data_frame(Poisson = rpois(n, 3),
NegBinom = rnbinom(n, 5, .5)) %>%
mutate(Simulation = Poisson + NegBinom) %>%
gather(Distribution, Value) %>%
mutate(Distribution = sub("NegBinom", "Negative Binomial", Distribution))
mcSample <- mcHist %>%
group_by(Distribution) %>%
slice(1:100) %>%
gather(Distribution, Value) %>%
group_by(Distribution) %>%
mutate(rowNum = row_number(Distribution))
g <- ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("+", "=", ""), each = n), size = 24)
g
set.seed(82)
n <- 10000
mcHist <- data_frame(Poisson = rpois(n, 3),
NegBinom = rnbinom(n, 5, .5)) %>%
mutate(Simulation = Poisson + NegBinom) %>%
gather(Distribution, Value) %>%
mutate(Distribution = sub("NegBinom", "Negative Binomial", Distribution))
mcSample <- mcHist %>%
group_by(Distribution) %>%
slice(1:100) %>%
gather(Distribution, Value) %>%
group_by(Distribution) %>%
mutate(rowNum = row_number(Distribution))
g <- ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("+", "=", ""), each = n), size = 24)
g
(i in 1:length(unique(mcSample$rowNum))) {
for (i in 1:length(unique(mcSample$rowNum))) {
dataUpdate <- mcSample %>%
group_by(Distribution) %>%
filter(rowNum %in% 1:i) %>%
group_by(Distribution) %>%
mutate(Last = rowNum == i)
gUpdate <- g +
geom_dotplot(data = dataUpdate,
aes(Value, fill = Last), color = NA,
binwidth = 1, method = "histodot",
dotsize = .6) +
scale_fill_manual(guide = FALSE, values = c("black", "red"))
#gUpdate
ggsave(filename = paste0('frames/plot', sprintf("%03d",i) , '.jpg'),
plot = gUpdate, device = 'jpeg')
}
set.seed(82)
n <- 10000
mcHist <- data_frame(Poisson = rpois(n, 3),
NegBinom = rnbinom(n, 5, .5)) %>%
mutate(Simulation = Poisson + NegBinom) %>%
gather(Distribution, Value) %>%
mutate(Distribution = sub("NegBinom", "Negative Binomial", Distribution))
mcSample <- mcHist %>%
group_by(Distribution) %>%
slice(1:200) %>%
gather(Distribution, Value) %>%
group_by(Distribution) %>%
mutate(rowNum = row_number(Distribution))
ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("+", "=", ""), each = n), size = 24)
ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme_dpird() +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("+", "=", ""), each = n), size = 24)
library(theme.dpird)
ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme_dpird() +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("+", "=", ""), each = n), size = 24)
ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("+", "=", ""), each = n), size = 24)
ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank()) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("=", "+", ""), each = n), size = 24)
ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme_dpird() +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank(),
plot.background = element_rect(fill = "#003F51"), panel.background = element_rect(fill = "#003F51")) +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("=", "+", ""), each = n), size = 24)
ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme_dpird(colourway = "dpird blue") +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank(),
plot.background = element_rect(fill = "#003F51"), panel.background = element_rect(fill = "#003F51"),
legend.position = "none") +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("=", "+", ""), each = n), size = 24)
ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme_dpird(colourway = "dpird blue", minor_grid = T) +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank(),
plot.background = element_rect(fill = "#003F51"), panel.background = element_rect(fill = "#003F51"),
legend.position = "none") +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("=", "+", ""), each = n), size = 24)
ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme_dpird(colourway = "dpird blue", minor_grid = T, border = T) +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank(),
plot.background = element_rect(fill = "#003F51"), panel.background = element_rect(fill = "#003F51"),
legend.position = "none") +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("=", "+", ""), each = n), size = 24)
ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme_dpird(colourway = "dpird blue", border = T) +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank(),
plot.background = element_rect(fill = "#003F51"), panel.background = element_rect(fill = "#003F51"),
legend.position = "none") +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("=", "+", ""), each = n), size = 24)
g <- ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme_dpird(colourway = "dpird blue", border = T) +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank(),
plot.background = element_rect(fill = "#003F51"), panel.background = element_rect(fill = "#003F51"),
legend.position = "none") +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("=", "+", ""), each = n), size = 24)
g <- ggplot(mcHist) +
geom_histogram(aes(Value, ..density.., color = Distribution),
binwidth = 1, alpha = .3, fill = "transparent") +
facet_grid(~Distribution) +
coord_cartesian(ylim = c(0, .23)) +
labs(x = "", y = "Frequency") +
theme_dpird(colourway = "dpird blue", border = T) +
theme(panel.grid = element_blank(),
strip.text = element_text(size = 16, hjust  = 0.1),
axis.text.x = element_blank(),
plot.background = element_rect(fill = "#003F51"), panel.background = element_rect(fill = "#003F51"),
legend.position = "none") +
geom_text(x = rep(21, 3*n), y = rep(.1, 3*n),
label = rep(c("=", "+", ""), each = n), size = 24)
for (i in 1:length(unique(mcSample$rowNum))) {
dataUpdate <- mcSample %>%
group_by(Distribution) %>%
filter(rowNum %in% 1:i) %>%
group_by(Distribution) %>%
mutate(Last = rowNum == i)
gUpdate <- g +
geom_dotplot(data = dataUpdate,
aes(Value, fill = Last), color = NA,
binwidth = 1, method = "histodot",
dotsize = .6) +
scale_fill_manual(guide = FALSE, values = c("black", "red"))
#gUpdate
ggsave(filename = paste0('frames/plot', sprintf("%03d",i) , '.jpg'),
plot = gUpdate, device = 'jpeg')
}
imgs <- list.files("frames/", full.names = T)
img_list <- lapply(imgs, function(img) {
image_read(img)
})
library(magick)
img_list <- lapply(imgs, function(img) {
image_read(img)
})
## join the images together
img_joined <- image_join(img_list)
## animate at 2 frames per second
img_animated <- image_animate(img_joined, fps = 2)
## view animated image
img_animated
